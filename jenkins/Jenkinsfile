pipeline {
    agent any

    tools {
        maven 'maven123'
    }

    environment {
        IMAGE_NAME = "srinivasbv/ecommerce-app"   // ✅ Use full repo name for DockerHub
        DOCKER_CREDENTIALS_ID = "52ba893f-55a0-4971-aa34-64c6dafef815" // ✅ Jenkins DockerHub credentials ID
        GIT_CREDENTIALS_ID = "e878dd2c-30f3-4fc3-896e-f43dd988ad8a"     // ✅ GitHub credentials ID
    }

    stages {
        stage('Clone Code') {
            steps {
                git credentialsId: "${GIT_CREDENTIALS_ID}", branch: 'main', url: 'https://github.com/Git-Srinivas5/ecommerce-devops-project.git'
            }
        }

        stage('Build with Maven') {
            steps {
                dir('backend') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${IMAGE_NAME}", "backend")
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS_ID}") {
                        dockerImage.push('latest')
                    }
                }
            }
        }
    }

    post {
        success {
            echo '✅ Build and Docker image pushed successfully!'
        }
        failure {
            echo '❌ Pipeline failed. Please check the logs.'
        }
    }
}

